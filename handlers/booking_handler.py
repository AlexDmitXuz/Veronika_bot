from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from datetime import datetime

from config import load_config
from fsm.fsm_booking import Booking
from keyboards.booking_keyboard import *
from keyboards.main_menu_keyboard import main_menu_keyboard
from utils.calendar_kb import get_calendar
from utils.time_kb import time_booking
from database.db import add_photo_session

config = load_config()
photographer_id = config.admin_id

router = Router()

@router.callback_query(F.data=='booking')
async def booking_handler(callback:CallbackQuery, state: FSMContext):
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏ —Ç–∏–ø —Å—ä–µ–º–∫–∏:', reply_markup=type_shoot_keyboard())
    await callback.answer()
    await state.set_state(Booking.type_shoot)

@router.callback_query(Booking.type_shoot)
async def booking_handler_type(callback: CallbackQuery, state: FSMContext):
    user_id = callback.from_user.id
    admin_id = config.admin_id
    if callback.data == 'main_menu':
        await state.clear()
        await callback.message.edit_text("–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ ‚ùå", reply_markup=main_menu_keyboard(user_id=user_id, admin_id=admin_id))
        await callback.answer()
        await state.clear()
        await callback.answer()
        return
    await state.update_data(type_shoot=callback.data)
    await state.set_state(Booking.date)  # –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await callback.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏–∏", reply_markup=get_calendar())
    await callback.answer()

@router.callback_query(Booking.date)
async def booking_handler_date(callback: CallbackQuery, state: FSMContext):
    data = callback.data

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ YYYY-MM-DD
    try:
        selected_date = datetime.strptime(data, "%Y-%m-%d").date()
        today = datetime.today().date()

        if selected_date < today:
            await callback.answer("–ù–µ–ª—å–∑—è –≤—ã–±—Ä–∞—Ç—å –ø—Ä–æ—à–µ–¥—à—É—é –¥–∞—Ç—É ‚ùå", show_alert=True)
            return

        await state.update_data(date=selected_date)
        await callback.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏–∏", reply_markup=time_booking())
        await callback.answer()
        await state.set_state(Booking.time)
        return  # –í—ã—Ö–æ–¥ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã

    except ValueError:
        pass  # –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –¥–∞—Ç–∞ ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ next/prev/cancel

    if data.startswith("prev:") or data.startswith("next:"):
        parts = data.split(":")
        if len(parts) != 3:
            await callback.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö")
            return

        _, year_str, month_str = parts
        year, month = int(year_str), int(month_str)
        if data.startswith("prev:"):
            if month == 1:
                year -= 1
                month = 12
            else:
                month -= 1
        else:  # next
            if month == 12:
                year += 1
                month = 1
            else:
                month += 1

        await callback.message.edit_reply_markup(reply_markup=get_calendar(year, month))
        await callback.answer()

    elif data == "cancel_booking":
        user_id = callback.from_user.id
        admin_id = config.admin_id
        await callback.message.edit_text("–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ ‚ùå", reply_markup=main_menu_keyboard(user_id=user_id, admin_id=admin_id))
        await callback.answer()
        await state.clear()

    else:
        await callback.answer()


@router.callback_query(Booking.time)
async def booking_handler_time(callback: CallbackQuery, state: FSMContext):
    if callback.data.startswith("time:"):
        time_selected = callback.data.split("time:")[1]
        await state.update_data(time=time_selected)
        data = await state.get_data()
        await callback.message.edit_text(
            f"<b>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –±—Ä–æ–Ω—å</b>:\n\n"
            f"üì∏ –¢–∏–ø —Å—ä—ë–º–∫–∏: <b>{data['type_shoot']}</b>\n"
            f"üìÖ –î–∞—Ç–∞: <b>{data['date']}</b>\n"
            f"üïí –í—Ä–µ–º—è: <b>{data['time']}</b>",
            reply_markup=confirm_booking(),
            parse_mode="HTML"
        )
        await state.set_state(Booking.confirm)
    await callback.answer()


@router.callback_query(Booking.confirm)
async def booking_handler_confirm(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    if data == "cancel_booking":
        user_id = callback.from_user.id
        admin_id = config.admin_id
        await callback.message.edit_text("–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ ‚ùå", reply_markup=main_menu_keyboard(user_id=user_id, admin_id=admin_id))
        await callback.answer()
        await state.clear()
    else:
        user_id = callback.from_user.id
        admin_id = config.admin_id
        await callback.message.edit_text('–ó–∞–ø–∏—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ ‚úÖ', reply_markup=main_menu_keyboard(user_id=user_id, admin_id=admin_id))

        text = (
            f"üì∏ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!\n\n"
            f"üë§ –ö–ª–∏–µ–Ω—Ç: @{callback.from_user.username or '–ë–µ–∑ username'}\n"
            f"üÜî ID: {callback.from_user.id}\n"
            f"–¢–∏–ø: {data['type_shoot']}\n"
            f"–î–∞—Ç–∞: {data['date']}\n"
            f"–í—Ä–µ–º—è: {data['time']}"
        )
        await callback.bot.send_message(chat_id=photographer_id, text=text)

        await add_photo_session(
            user_id=callback.from_user.id,
            username=callback.from_user.username,
            session_type=data['type_shoot'],
            session_date=data['date'],  # —Ñ–æ—Ä–º–∞—Ç –ì–ì–ì–ì-–ú–ú-–î–î
            session_time=data['time'],  # —Ñ–æ—Ä–º–∞—Ç –ß–ß:–ú–ú
            )

        await state.clear()
        await callback.answer()







